-- used for password salting + hashing god bless postgres
CREATE EXTENSION pgcrypto;

CREATE TYPE days AS ENUM ('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday')

CREATE TABLE Users (
	user_id 		INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	address 		TEXT NOT NULL,
	city			TEXT NOT NULL,
	state			TEXT NOT NULL,
	email 			TEXT NOT NULL UNIQUE,
	user_name 		TEXT NOT NULL,
	last_signed_in 	TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
	is_company 		BOOLEAN NOT NULL,
	rating 			REAL NOT NULL DEFAULT 0,
	num_ratings		INT NOT NULL DEFAULT 0,
	joined_on 		TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
	passwd 			TEXT NOT NULL,
	token			TEXT NOT NULL DEFAULT '0',
	banned    		BOOLEAN NOT NULL DEFAULT 'f',
	points			INT NOT NULL DEFAULT 0
);

CREATE TABLE Listings (
	title					TEXT NOT NULL,
	description				TEXT NOT NULL,
	img_hash				TEXT NOT NULL,
	listing_id 				INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	material_type 			TEXT NOT NULL,
	material_weight 		REAL NOT NULL,
	user_id 				INT NOT NULL,
	active					BOOLEAN NOT NULL DEFAULT 't',
	pickup_date_time		TIMESTAMP WITH TIME ZONE,
	address					TEXT NOT NULL,
	frozen_by				INT,
	price					REAL,
	FOREIGN KEY (user_id) REFERENCES Users(user_id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (frozen_by) REFERENCES Users(user_id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Messages (
	message_id 		INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	message_time 	TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
	to_user 		INT NOT NULL,
	from_user 		INT NOT NULL,
	for_listing		INT NOT NULL,
	message_content TEXT NOT NULL,
	FOREIGN KEY (to_user) REFERENCES Users(user_id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (from_user) REFERENCES Users(user_id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (for_listing) REFERENCES Listing(listing_id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Timeslots (
	time_id			INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id			INT NOT NULL,
	day				days NOT NULL,
	start_time		TIME NOT NULL,
	end_time		TIME NOT NULL,
	FOREIGN KEY (user_id) REFERENCES Users(user_id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Invoices (
	invoice_id	INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	status		BOOLEAN NOT NULL DEFAULT 't', -- true for open, false for closed
	created_at  TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
	for_listing	INT NOT NULL,
	FOREIGN KEY (for_listing) REFERENCES Listings(listing_id) ON UPDATE CASCADE ON DELETE CASCADE
);